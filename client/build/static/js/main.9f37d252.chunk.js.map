{"version":3,"sources":["components/Layout/Footer.js","components/Layout/Header.js","components/Layout/Layout.js","components/Spinner.js","components/Analytics.js","pages/HomePage.js","pages/Login.js","pages/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","React","createElement","className","Header","loginUser","setLoginUser","useState","loading","setLoading","navigate","useNavigate","useEffect","user","JSON","parse","localStorage","getItem","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","to","name","onClick","logoutHandler","removeItem","message","success","Layout","_ref","children","Fragment","Spinner","role","categories","Analytics","allTransaction","Array","isArray","totalTransaction","length","totalIncomeTransactions","filter","transaction","totalExpenseTransactions","totalIncomePercent","totalExpensePercent","totalTurnover","reduce","acc","amount","totalIncomeTurnover","totalExpenseTurnover","totalIncomeTurnoverPercent","totalExpenseTurnoverPercent","Progress","strokeColor","percent","toFixed","map","category","key","RangePicker","DatePicker","HomePage","showModal","setShowModal","setAllTransaction","frequency","setFrequency","selectedDate","setSelectedDate","setType","viewData","setViewData","editable","setEditable","columns","title","dataIndex","render","text","moment","format","record","EditOutlined","DeleteOutlined","handleDelete","async","res","axios","post","userid","_id","data","error","console","log","getAllTransaction","transactionId","Select","value","onChange","Option","values","UnorderedListOutlined","AreaChartOutlined","Table","dataSource","rowKey","Modal","open","onCancel","footer","Form","layout","onFinish","payload","userId","initialValues","Item","label","Input","Login","setItem","stringify","password","undefined","rules","required","Password","Register","min","ProtectedRoutes","Navigate","App","setUser","userData","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","HashRouter"],"mappings":"8TAUeA,MARAA,IAEXC,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,MAAIC,UAAU,eAAc,kDCsDnBC,MAvDAA,KACb,MAAOC,EAAWC,GAAgBC,mBAAS,OACpCC,EAASC,GAAcF,oBAAS,GACjCG,EAAWC,cAEjBC,oBAAU,KACR,MAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SACzCJ,GACFP,EAAaO,GAEfJ,GAAW,IACV,IAQH,OAAID,EAAgB,KAGlBP,IAAAC,cAAA,OAAKC,UAAU,oCACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UACEC,UAAU,iBACVe,KAAK,SACLC,iBAAe,WACfC,iBAAe,uBACfC,gBAAc,sBACdC,gBAAc,QACdC,aAAW,qBAEXtB,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BqB,GAAG,uBAC3CvB,IAAAC,cAACuB,IAAI,CAACtB,UAAU,eAAeuB,GAAG,KAAI,sBAGtCzB,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,YAAqB,OAATE,QAAS,IAATA,OAAS,EAATA,EAAWsB,OAEtC1B,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,UAAQC,UAAU,kBAAkByB,QA/B1BC,KACpBb,aAAac,WAAW,QACxBC,IAAQC,QAAQ,uBAChBtB,EAAS,YA4B6D,gBClC3DuB,MAVAC,IAAkB,IAAjBC,SAAEA,GAAUD,EACxB,OACIjC,IAAAC,cAAAD,IAAAmC,SAAA,KACInC,IAAAC,cAACE,EAAM,MACPH,IAAAC,cAAA,OAAKC,UAAU,WAAWgC,GAC1BlC,IAAAC,cAACF,EAAM,iBCKJqC,MAZCA,IAEZpC,IAAAC,cAAAD,IAAAmC,SAAA,KACEnC,IAAAC,cAAA,OAAKC,UAAU,iCACbF,IAAAC,cAAA,OAAKC,UAAU,iBAAiBmC,KAAK,UACnCrC,IAAAC,cAAA,QAAMC,UAAU,mBAAkB,4CCH5C,MAAMoC,EAAa,CACjB,SACA,MACA,UACA,OACA,QACA,QACA,UACA,MACA,OAwKaC,MArKGN,IAAwB,IAAvBO,eAAEA,GAAgBP,EACnC,IAAKO,IAAmBC,MAAMC,QAAQF,GACpC,OAAOxC,IAAAC,cAAA,WAAK,8BAId,MAAM0C,EAAmBH,EAAeI,OAClCC,EAA0BL,EAAeM,OAC5CC,GAAqC,WAArBA,EAAY9B,MAEzB+B,EAA2BR,EAAeM,OAC7CC,GAAqC,YAArBA,EAAY9B,MAGzBgC,EACHJ,EAAwBD,OAASD,EAAoB,IAClDO,EACHF,EAAyBJ,OAASD,EAAoB,IAGnDQ,EAAgBX,EAAeY,OACnC,CAACC,EAAKN,IAAgBM,EAAMN,EAAYO,OACxC,GAGIC,EAAsBV,EAAwBO,OAClD,CAACC,EAAKN,IAAgBM,EAAMN,EAAYO,OACxC,GAEIE,EAAuBR,EAAyBI,OACpD,CAACC,EAAKN,IAAgBM,EAAMN,EAAYO,OACxC,GAGIG,EACHF,EAAsBJ,EAAiB,IACpCO,EACHF,EAAuBL,EAAiB,IAE3C,OACEnD,IAAAC,cAAAD,IAAAmC,SAAA,KACEnC,IAAAC,cAAA,OAAKC,UAAU,WAEbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,eAAc,uBACNyC,GAEvB3C,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,MAAIC,UAAU,gBAAe,WAClB2C,EAAwBD,QAEnC5C,IAAAC,cAAA,MAAIC,UAAU,eAAc,YAChB8C,EAAyBJ,SAGvC5C,IAAAC,cAAA,WACED,IAAAC,cAAC0D,IAAQ,CACP1C,KAAK,SACL2C,YAAa,QACb1D,UAAU,OACV2D,QAASZ,EAAmBa,QAAQ,KAEtC9D,IAAAC,cAAC0D,IAAQ,CACP1C,KAAK,SACL2C,YAAa,MACb1D,UAAU,OACV2D,QAASX,EAAoBY,QAAQ,QAO7C9D,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,eAAc,mBAAiBiD,GAC9CnD,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,MAAIC,UAAU,gBAAe,WAASqD,GACtCvD,IAAAC,cAAA,MAAIC,UAAU,eAAc,YAAUsD,IAExCxD,IAAAC,cAAA,WACED,IAAAC,cAAC0D,IAAQ,CACP1C,KAAK,SACL2C,YAAa,QACb1D,UAAU,OACV2D,QAASJ,EAA2BK,QAAQ,KAE9C9D,IAAAC,cAAC0D,IAAQ,CACP1C,KAAK,SACL2C,YAAa,MACb1D,UAAU,OACV2D,QAASH,EAA4BI,QAAQ,SAQvD9D,IAAAC,cAAA,OAAKC,UAAU,YAEbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UAAI,wBACHqC,EAAWyB,IAAKC,IACf,MAAMV,EAASd,EACZM,OACEC,GACsB,WAArBA,EAAY9B,MACZ8B,EAAYiB,WAAaA,GAE5BZ,OAAO,CAACC,EAAKN,IAAgBM,EAAMN,EAAYO,OAAQ,GAE1D,OACEA,EAAS,GACPtD,IAAAC,cAAA,OAAKC,UAAU,OAAO+D,IAAKD,GACzBhE,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAK+D,GACLhE,IAAAC,cAAC0D,IAAQ,CACPE,SACGP,EAASC,EACV,KACAO,QAAQ,UAUxB9D,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UAAI,yBACHqC,EAAWyB,IAAKC,IACf,MAAMV,EAASd,EACZM,OACEC,GACsB,YAArBA,EAAY9B,MACZ8B,EAAYiB,WAAaA,GAE5BZ,OAAO,CAACC,EAAKN,IAAgBM,EAAMN,EAAYO,OAAQ,GAE1D,OACEA,EAAS,GACPtD,IAAAC,cAAA,OAAKC,UAAU,OAAO+D,IAAKD,GACzBhE,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAK+D,GACLhE,IAAAC,cAAC0D,IAAQ,CACPE,SACGP,EAASE,EACV,KACAM,QAAQ,aC/JhC,MAAMI,YAAEA,GAAgBC,IAgOTC,MA9NEA,KACf,MAAOC,EAAWC,GAAgBhE,oBAAS,IACpCC,EAASC,GAAcF,oBAAS,IAChCkC,EAAgB+B,GAAqBjE,mBAAS,KAC9CkE,EAAWC,GAAgBnE,mBAAS,MACpCoE,EAAcC,GAAmBrE,mBAAS,KAC1CW,EAAM2D,GAAWtE,mBAAS,QAC1BuE,EAAUC,GAAexE,mBAAS,UAClCyE,EAAUC,GAAe1E,mBAAS,MAEnC2E,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,OAASC,GAASrF,IAAAC,cAAA,YAAOqF,IAAOD,GAAME,OAAO,gBAE/C,CACEL,MAAO,SACPC,UAAW,UAEb,CACED,MAAO,OACPC,UAAW,QAEb,CACED,MAAO,WACPC,UAAW,YAEb,CACED,MAAO,YACPC,UAAW,aAEb,CACED,MAAO,UACPE,OAAQA,CAACC,EAAMG,IACbxF,IAAAC,cAAA,WACED,IAAAC,cAACwF,IAAY,CACX9D,QAASA,KACPqD,EAAYQ,GACZlB,GAAa,MAGjBtE,IAAAC,cAACyF,IAAc,CAACxF,UAAU,OACxByB,QAASA,KACPgE,EAAaH,SAWzB7E,oBAAU,KACkBiF,WACxB,IACE,MAAMhF,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CR,GAAW,GACX,MAAMqF,QAAYC,IAAMC,KAAK,uCAAwC,CACnEC,OAAQpF,EAAKqF,IACbzB,YACAE,eACAzD,SAEFT,GAAW,GACX+D,EAAkB9B,MAAMC,QAAQmD,EAAIK,MAAQL,EAAIK,KAAO,IACvD,MAAOC,GACPC,QAAQC,IAAIF,GACZrE,IAAQqE,MAAM,kCAGlBG,IACC,CAAC9B,EAAWE,EAAczD,IAG7B,MAAM0E,EAAaC,UACjB,IACEpF,GAAW,SACLsF,IAAMC,KAAK,0CAA0C,CAACQ,cAAcf,EAAOS,MACjFzF,GAAW,GACXsB,IAAQC,QAAQ,uBACjB,MAAMoE,GACL3F,GAAW,GACX4F,QAAQC,IAAIF,GACZrE,IAAQqE,MAAM,sBAkClB,OACEnG,IAAAC,cAAC+B,EAAM,KACJzB,GAAWP,IAAAC,cAACmC,EAAO,MACpBpC,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAACuG,IAAM,CAACC,MAAOjC,EAAWkC,SAAWD,GAAUhC,EAAagC,IAC1DzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,KAAI,eACzBzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,MAAK,gBAC1BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,OAAM,eAC3BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,UAAS,WAEjB,WAAdjC,GACCxE,IAAAC,cAACiE,EAAW,CACVuC,MAAO/B,EACPgC,SAAWE,GAAWjC,EAAgBiC,MAI5C5G,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAACuG,IAAM,CAACC,MAAOxF,EAAMyF,SAAWD,GAAU7B,EAAQ6B,IAChDzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,OAAM,OAC3BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,UAAS,UAC9BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,WAAU,aAGnCzG,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAC4G,IAAqB,CACpB3G,kBAAgC,UAAb2E,EAAuB,cAAgB,kBAC1DlD,QAASA,IAAMmD,EAAY,WAE7B9E,IAAAC,cAAC6G,IAAiB,CAChB5G,kBAAgC,cAAb2E,EAA2B,cAAgB,kBAC9DlD,QAASA,IAAMmD,EAAY,gBAG/B9E,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAQC,UAAU,kBAAkByB,QAASA,IAAM2C,GAAa,IAAO,aAM3EtE,IAAAC,cAAA,OAAKC,UAAU,WACC,UAAb2E,EACC7E,IAAAC,cAAC8G,IAAK,CAAC9B,QAASA,EAAS+B,WAAYxE,EAAgByE,OAAO,QAE5DjH,IAAAC,cAACsC,EAAS,CAACC,eAAgBA,KAI/BxC,IAAAC,cAACiH,IAAK,CACJhC,MAAOH,EAAW,mBAAqB,kBACvCoC,KAAM9C,EACN+C,SAAUA,KACR9C,GAAa,GACbU,EAAY,OAEdqC,QAAQ,GAERrH,IAAAC,cAACqH,IAAI,CAACC,OAAO,WAAWC,SA1FT5B,UACnB,IACE,MAAMhF,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CR,GAAW,GACPuE,SACIe,IAAMC,KAAK,wCAAyC,CACxD0B,QAAS,IACJb,EACHc,OAAQ9G,EAAKqF,KAEfM,cAAexB,EAASkB,MAE1BnE,IAAQC,QAAQ,4CAEV+D,IAAMC,KAAK,uCAAwC,IACpDa,EACHZ,OAAQpF,EAAKqF,MAEfnE,IAAQC,QAAQ,mCAElBvB,GAAW,GACX8D,GAAa,GACbU,EAAY,MACZ,MAAOmB,GACP3F,GAAW,GACXsB,IAAQqE,MAAM,+BAiEoCwB,cAAe5C,GAC7D/E,IAAAC,cAACqH,IAAKM,KAAI,CAACC,MAAM,SAASnG,KAAK,UAC7B1B,IAAAC,cAAC6H,IAAK,CAAC7G,KAAK,UAEdjB,IAAAC,cAACqH,IAAKM,KAAI,CAACC,MAAM,OAAOnG,KAAK,QAC3B1B,IAAAC,cAACuG,IAAM,KACLxG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,UAAS,UAC9BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,WAAU,aAGnCzG,IAAAC,cAACqH,IAAKM,KAAI,CAACC,MAAM,WAAWnG,KAAK,YAC/B1B,IAAAC,cAACuG,IAAM,KACLxG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,UAAS,UAC9BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,OAAM,OAC3BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,WAAU,WAC/BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,QAAO,QAC5BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,SAAQ,SAC7BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,SAAQ,SAC7BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,WAAU,WAC/BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,OAAM,OAC3BzG,IAAAC,cAACuG,IAAOG,OAAM,CAACF,MAAM,OAAM,SAG/BzG,IAAAC,cAACqH,IAAKM,KAAI,CAACC,MAAM,OAAOnG,KAAK,QAC3B1B,IAAAC,cAAC6H,IAAK,CAAC7G,KAAK,UAEdjB,IAAAC,cAACqH,IAAKM,KAAI,CAACC,MAAM,YAAYnG,KAAK,aAChC1B,IAAAC,cAAC6H,IAAK,CAAC7G,KAAK,UAEdjB,IAAAC,cAACqH,IAAKM,KAAI,CAACC,MAAM,cAAcnG,KAAK,eAClC1B,IAAAC,cAAC6H,IAAK,CAAC7G,KAAK,UAEdjB,IAAAC,cAAA,OAAKC,UAAU,8BACbF,IAAAC,cAAA,UAAQgB,KAAK,SAASf,UAAU,mBAAkB,aChK/C6H,MA3DDA,KACZ,MAAOxH,EAASC,GAAcF,oBAAS,GACjCG,EAAWC,cA0BjB,OANAC,oBAAU,KACJI,aAAaC,QAAQ,SACvBP,EAAS,MAEV,CAACA,IAGFT,IAAAC,cAAA,OAAKC,UAAU,iBACZK,GAAWP,IAAAC,cAACmC,EAAO,MACpBpC,IAAAC,cAACqH,IAAI,CAACC,OAAO,WAAWC,SA1BN5B,UACpB,IACEpF,GAAW,GACX,MAAM0F,KAAEA,SAAeJ,IAAMC,KAAK,sBAAuBa,GACzDpG,GAAW,GACXsB,IAAQC,QAAQ,qBAGhBhB,aAAaiH,QAAQ,OAAQnH,KAAKoH,UAAU,IAAK/B,EAAKtF,KAAMsH,cAAUC,KACtE1H,EAAS,KACT,MAAO0F,GACP3F,GAAW,GACXsB,IAAQqE,MAAM,8CAeZnG,IAAAC,cAAA,UAAI,cAEJD,IAAAC,cAACqH,IAAKM,KAAI,CACRC,MAAM,QACNnG,KAAK,QACL0G,MAAO,CAAC,CAAEC,UAAU,EAAMvG,QAAS,4BAA8B,CAAEb,KAAM,QAASa,QAAS,0BAE3F9B,IAAAC,cAAC6H,IAAK,CAAC7G,KAAK,WAGdjB,IAAAC,cAACqH,IAAKM,KAAI,CACRC,MAAM,WACNnG,KAAK,WACL0G,MAAO,CAAC,CAAEC,UAAU,EAAMvG,QAAS,iCAEnC9B,IAAAC,cAAC6H,IAAMQ,SAAQ,OAGjBtI,IAAAC,cAAA,OAAKC,UAAU,kCACbF,IAAAC,cAACuB,IAAI,CAACC,GAAG,aAAY,sCACrBzB,IAAAC,cAAA,UAAQgB,KAAK,SAASf,UAAU,mBAAkB,aCe7CqI,MAnEEA,KACf,MAAM9H,EAAWC,eACVH,EAASC,GAAcF,oBAAS,GAuBvC,OANAK,oBAAU,KACJI,aAAaC,QAAQ,SACvBP,EAAS,MAEV,CAACA,IAGFT,IAAAC,cAAA,OAAKC,UAAU,iBACZK,GAAWP,IAAAC,cAACmC,EAAO,MACpBpC,IAAAC,cAACqH,IAAI,CAACC,OAAO,WAAWC,SAvBN5B,UACpB,IACEpF,GAAW,SACLsF,IAAMC,KAAK,yBAA0Ba,GAC3C9E,IAAQC,QAAQ,2BAChBvB,GAAW,GACXC,EAAS,UACT,MAAO0F,GACP3F,GAAW,GACXsB,IAAQqE,MAAM,8CAeZnG,IAAAC,cAAA,UAAI,iBAEJD,IAAAC,cAACqH,IAAKM,KAAI,CACRC,MAAM,OACNnG,KAAK,OACL0G,MAAO,CAAC,CAAEC,UAAU,EAAMvG,QAAS,6BAEnC9B,IAAAC,cAAC6H,IAAK,OAGR9H,IAAAC,cAACqH,IAAKM,KAAI,CACRC,MAAM,QACNnG,KAAK,QACL0G,MAAO,CAAC,CAAEC,UAAU,EAAMvG,QAAS,4BAA8B,CAAEb,KAAM,QAASa,QAAS,0BAE3F9B,IAAAC,cAAC6H,IAAK,CAAC7G,KAAK,WAGdjB,IAAAC,cAACqH,IAAKM,KAAI,CACRC,MAAM,WACNnG,KAAK,WACL0G,MAAO,CACL,CAAEC,UAAU,EAAMvG,QAAS,+BAC3B,CAAE0G,IAAK,EAAG1G,QAAS,kDAGrB9B,IAAAC,cAAC6H,IAAMQ,SAAQ,OAGjBtI,IAAAC,cAAA,OAAKC,UAAU,kCACbF,IAAAC,cAACuB,IAAI,CAACC,GAAG,UAAS,2CAClBzB,IAAAC,cAAA,UAAQgB,KAAK,SAASf,UAAU,mBAAkB,gBC5BrD,SAASuI,EAAexG,GAAqB,IAApBrB,KAAEA,EAAIsB,SAAEA,GAAUD,EAChD,OAAIrB,EACKsB,EAEAlC,IAAAC,cAACyI,IAAQ,CAACjH,GAAG,WAITkH,MAxCf,WACE,MAAOpI,EAASC,GAAcF,oBAAS,IAChCM,EAAMgI,GAAWtI,mBAAS,MAUjC,OARAK,oBAAU,KACR,MAAMkI,EAAW9H,aAAaC,QAAQ,QAClC6H,GACFD,EAAQ/H,KAAKC,MAAM+H,IAErBrI,GAAW,IACV,IAECD,EAAgB,KAGlBP,IAAAC,cAAAD,IAAAmC,SAAA,KACEnC,IAAAC,cAAC6I,IAAM,KACL9I,IAAAC,cAAC8I,IAAK,CACJC,KAAK,IACLC,QACEjJ,IAAAC,cAACwI,EAAe,CAAC7H,KAAMA,GACrBZ,IAAAC,cAACmE,EAAQ,SAIfpE,IAAAC,cAAC8I,IAAK,CAACC,KAAK,YAAYC,QAASjJ,IAAAC,cAACsI,EAAQ,QAC1CvI,IAAAC,cAAC8I,IAAK,CAACC,KAAK,SAASC,QAASjJ,IAAAC,cAAC8H,EAAK,WCpB7BmB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAKtH,IAAiD,IAAhDwH,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS5H,EACpEwH,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCCDW,IAASC,WAAWC,SAASC,eAAe,SACpD7E,OACHpF,IAAAC,cAACD,IAAMkK,WAAU,KACflK,IAAAC,cAACkK,IAAU,KACTnK,IAAAC,cAAC0I,EAAG,SAQVO","file":"static/js/main.9f37d252.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"bg-dark text-light p-4\">\r\n      <h6 className=\"text-center\">@Expense Tracker. All rights reserved</h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\n\r\nconst Header = () => {\r\n  const [loginUser, setLoginUser] = useState(null); // set to null initially\r\n  const [loading, setLoading] = useState(true);     // loading state\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      setLoginUser(user);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"user\");\r\n    message.success(\"Logout Successfully\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  if (loading) return null; // Don't render Header until user is loaded\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarTogglerDemo01\"\r\n          aria-controls=\"navbarTogglerDemo01\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Expense Management\r\n          </Link>\r\n          <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <p className=\"nav-link\">{loginUser?.name}</p>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button className=\"btn btn-primary\" onClick={logoutHandler}>\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"content\">{children}</div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport { Progress } from \"antd\";\r\n\r\n// Categories\r\nconst categories = [\r\n  \"salary\",\r\n  \"tip\",\r\n  \"project\",\r\n  \"food\",\r\n  \"movie\",\r\n  \"bills\",\r\n  \"medical\",\r\n  \"fee\",\r\n  \"tax\"\r\n];\r\n\r\nconst Analytics = ({ allTransaction }) => {\r\n  if (!allTransaction || !Array.isArray(allTransaction)) {\r\n    return <div>Loading or invalid data...</div>;\r\n  }\r\n\r\n  // Total transactions\r\n  const totalTransaction = allTransaction.length;\r\n  const totalIncomeTransactions = allTransaction.filter(\r\n    (transaction) => transaction.type === \"income\"\r\n  );\r\n  const totalExpenseTransactions = allTransaction.filter(\r\n    (transaction) => transaction.type === \"expense\"\r\n  );\r\n\r\n  const totalIncomePercent =\r\n    (totalIncomeTransactions.length / totalTransaction) * 100;\r\n  const totalExpensePercent =\r\n    (totalExpenseTransactions.length / totalTransaction) * 100;\r\n\r\n  // Total turnover\r\n  const totalTurnover = allTransaction.reduce(\r\n    (acc, transaction) => acc + transaction.amount,\r\n    0\r\n  );\r\n\r\n  const totalIncomeTurnover = totalIncomeTransactions.reduce(\r\n    (acc, transaction) => acc + transaction.amount,\r\n    0\r\n  );\r\n  const totalExpenseTurnover = totalExpenseTransactions.reduce(\r\n    (acc, transaction) => acc + transaction.amount,\r\n    0\r\n  );\r\n\r\n  const totalIncomeTurnoverPercent =\r\n    (totalIncomeTurnover / totalTurnover) * 100;\r\n  const totalExpenseTurnoverPercent =\r\n    (totalExpenseTurnover / totalTurnover) * 100;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row m-3\">\r\n        {/* Transactions Card */}\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Total Transactions: {totalTransaction}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"text-success\">\r\n                Income: {totalIncomeTransactions.length}\r\n              </h5>\r\n              <h5 className=\"text-danger\">\r\n                Expense: {totalExpenseTransactions.length}\r\n              </h5>\r\n            </div>\r\n            <div>\r\n              <Progress\r\n                type=\"circle\"\r\n                strokeColor={\"green\"}\r\n                className=\"mx-2\"\r\n                percent={totalIncomePercent.toFixed(0)}\r\n              />\r\n              <Progress\r\n                type=\"circle\"\r\n                strokeColor={\"red\"}\r\n                className=\"mx-2\"\r\n                percent={totalExpensePercent.toFixed(0)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Turnover Card */}\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Total Turnover: {totalTurnover}</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"text-success\">Income: {totalIncomeTurnover}</h5>\r\n              <h5 className=\"text-danger\">Expense: {totalExpenseTurnover}</h5>\r\n            </div>\r\n            <div>\r\n              <Progress\r\n                type=\"circle\"\r\n                strokeColor={\"green\"}\r\n                className=\"mx-2\"\r\n                percent={totalIncomeTurnoverPercent.toFixed(0)}\r\n              />\r\n              <Progress\r\n                type=\"circle\"\r\n                strokeColor={\"red\"}\r\n                className=\"mx-2\"\r\n                percent={totalExpenseTurnoverPercent.toFixed(0)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Category-wise Charts */}\r\n      <div className=\"row mt-3\">\r\n        {/* Income Category */}\r\n        <div className=\"col-md-4\">\r\n          <h4>Category-wise Income</h4>\r\n          {categories.map((category) => {\r\n            const amount = allTransaction\r\n              .filter(\r\n                (transaction) =>\r\n                  transaction.type === \"income\" &&\r\n                  transaction.category === category\r\n              )\r\n              .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n            return (\r\n              amount > 0 && (\r\n                <div className=\"card\" key={category}>\r\n                  <div className=\"card-body\">\r\n                    <h5>{category}</h5>\r\n                    <Progress\r\n                      percent={(\r\n                        (amount / totalIncomeTurnover) *\r\n                        100\r\n                      ).toFixed(0)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Expense Category */}\r\n        <div className=\"col-md-4\">\r\n          <h4>Category-wise Expense</h4>\r\n          {categories.map((category) => {\r\n            const amount = allTransaction\r\n              .filter(\r\n                (transaction) =>\r\n                  transaction.type === \"expense\" &&\r\n                  transaction.category === category\r\n              )\r\n              .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n            return (\r\n              amount > 0 && (\r\n                <div className=\"card\" key={category}>\r\n                  <div className=\"card-body\">\r\n                    <h5>{category}</h5>\r\n                    <Progress\r\n                      percent={(\r\n                        (amount / totalExpenseTurnover) *\r\n                        100\r\n                      ).toFixed(0)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Modal, Input, Select, message, Table, DatePicker } from 'antd';\r\nimport { UnorderedListOutlined, AreaChartOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport Layout from \"./../components/Layout/Layout\";\r\nimport axios from 'axios';\r\nimport Spinner from \"./../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Analytics from \"../components/Analytics\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst HomePage = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [allTransaction, setAllTransaction] = useState([]);\r\n  const [frequency, setFrequency] = useState('7');\r\n  const [selectedDate, setSelectedDate] = useState([]);\r\n  const [type, setType] = useState('all');\r\n  const [viewData, setViewData] = useState('table');\r\n  const [editable, setEditable] = useState(null);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      render: (text) => <span>{moment(text).format(\"YYYY-MM-DD\")}</span>,\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount',\r\n    },\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n    },\r\n    {\r\n      title: 'Category',\r\n      dataIndex: 'category',\r\n    },\r\n    {\r\n      title: 'Reference',\r\n      dataIndex: 'reference',\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      render: (text, record) => (\r\n        <div>\r\n          <EditOutlined\r\n            onClick={() => {\r\n              setEditable(record);\r\n              setShowModal(true);\r\n            }}\r\n          />\r\n          <DeleteOutlined className=\"mx-2\"\r\n            onClick={() => {\r\n              handleDelete(record);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //getall transactions\r\n\r\n  //useEffect Hook\r\n  useEffect(() => {\r\n    const getAllTransaction = async () => {\r\n      try {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        setLoading(true);\r\n        const res = await axios.post('/api/v1/transactions/get-transaction', {\r\n          userid: user._id,\r\n          frequency,\r\n          selectedDate,\r\n          type,\r\n        });\r\n        setLoading(false);\r\n        setAllTransaction(Array.isArray(res.data) ? res.data : []);\r\n      } catch (error) {\r\n        console.log(error);\r\n        message.error(\"Fetch Issue With Transaction\");\r\n      }\r\n    };\r\n    getAllTransaction();\r\n  }, [frequency, selectedDate, type]);\r\n\r\n  //delete handler\r\n  const handleDelete=async (record)=>{\r\n    try{\r\n      setLoading(true);\r\n      await axios.post(\"/api/v1/transactions/delete-transaction\",{transactionId:record._id})\r\n      setLoading(false);\r\n      message.success(\"Transaction Deleted\");\r\n    }catch(error){\r\n      setLoading(false);\r\n      console.log(error);\r\n      message.error('unable to delete')\r\n    }\r\n  }\r\n\r\n  //form handling\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      setLoading(true);\r\n      if (editable) {\r\n        await axios.post('/api/v1/transactions/edit-transaction', {\r\n          payload: {\r\n            ...values,\r\n            userId: user._id,\r\n          },\r\n          transactionId: editable._id,\r\n        });\r\n        message.success('Transaction Updated Successfully');\r\n      } else {\r\n        await axios.post('/api/v1/transactions/add-transaction', {\r\n          ...values,\r\n          userid: user._id,\r\n        });\r\n        message.success('Transaction Added Successfully');\r\n      }\r\n      setLoading(false);\r\n      setShowModal(false);\r\n      setEditable(null);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      message.error(\"Failed to add transaction\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <Spinner />}\r\n      <div className=\"filters\">\r\n        <div>\r\n          <h6>Select Frequency</h6>\r\n          <Select value={frequency} onChange={(value) => setFrequency(value)}>\r\n            <Select.Option value=\"7\">Last 1 Week</Select.Option>\r\n            <Select.Option value=\"30\">Last 1 Month</Select.Option>\r\n            <Select.Option value=\"365\">Last 1 Year</Select.Option>\r\n            <Select.Option value=\"custom\">Custom</Select.Option>\r\n          </Select>\r\n          {frequency === 'custom' && (\r\n            <RangePicker\r\n              value={selectedDate}\r\n              onChange={(values) => setSelectedDate(values)}\r\n            />\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h6>Select Type</h6>\r\n          <Select value={type} onChange={(value) => setType(value)}>\r\n            <Select.Option value=\"all\">All</Select.Option>\r\n            <Select.Option value=\"income\">Income</Select.Option>\r\n            <Select.Option value=\"expense\">Expense</Select.Option>\r\n          </Select>\r\n        </div>\r\n        <div className=\"switch-icon\">\r\n          <UnorderedListOutlined\r\n            className={`mx-2 ${viewData === 'table' ? 'active-icon' : 'inactive-icon'}`}\r\n            onClick={() => setViewData('table')}\r\n          />\r\n          <AreaChartOutlined\r\n            className={`mx-2 ${viewData === 'analytics' ? 'active-icon' : 'inactive-icon'}`}\r\n            onClick={() => setViewData('analytics')}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={() => setShowModal(true)}>\r\n            Add New\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {viewData === 'table' ? (\r\n          <Table columns={columns} dataSource={allTransaction} rowKey=\"_id\" />\r\n        ) : (\r\n          <Analytics allTransaction={allTransaction} />\r\n        )}\r\n      </div>\r\n\r\n      <Modal\r\n        title={editable ? 'Edit Transaction' : 'Add Transaction'}\r\n        open={showModal}\r\n        onCancel={() => {\r\n          setShowModal(false);\r\n          setEditable(null);\r\n        }}\r\n        footer={false}\r\n      >\r\n        <Form layout=\"vertical\" onFinish={handleSubmit} initialValues={editable}>\r\n          <Form.Item label=\"Amount\" name=\"amount\">\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Type\" name=\"type\">\r\n            <Select>\r\n              <Select.Option value=\"income\">Income</Select.Option>\r\n              <Select.Option value=\"expense\">Expense</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Category\" name=\"category\">\r\n            <Select>\r\n              <Select.Option value=\"salary\">Salary</Select.Option>\r\n              <Select.Option value=\"tip\">Tip</Select.Option>\r\n              <Select.Option value=\"project\">Project</Select.Option>\r\n              <Select.Option value=\"food\">Food</Select.Option>\r\n              <Select.Option value=\"movie\">Movie</Select.Option>\r\n              <Select.Option value=\"bills\">Bills</Select.Option>\r\n              <Select.Option value=\"medical\">Medical</Select.Option>\r\n              <Select.Option value=\"fee\">Fee</Select.Option>\r\n              <Select.Option value=\"tax\">Tax</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Date\" name=\"date\">\r\n            <Input type=\"date\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Reference\" name=\"reference\">\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Description\" name=\"description\">\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, message } from \"antd\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Login = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Form submit handler\r\n  const submitHandler = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.post(\"/api/v1/users/login\", values);\r\n      setLoading(false);\r\n      message.success(\"Login successful!\");\r\n      \r\n      // Store only necessary user info\r\n      localStorage.setItem(\"user\", JSON.stringify({ ...data.user, password: undefined }));\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      message.error(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Prevent logged-in user from accessing login page\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      {loading && <Spinner />}\r\n      <Form layout=\"vertical\" onFinish={submitHandler}>\r\n        <h1>Login Form</h1>\r\n\r\n        <Form.Item \r\n          label=\"Email\" \r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please enter your email!\" }, { type: \"email\", message: \"Enter a valid email!\" }]}\r\n        >\r\n          <Input type=\"email\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item \r\n          label=\"Password\" \r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please enter your password!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Link to=\"/register\">Not a user? Click here to register</Link>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, message } from \"antd\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Form submission handler\r\n  const submitHandler = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"/api/v1/users/register\", values);\r\n      message.success(\"Registration Successful\");\r\n      setLoading(false);\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      message.error(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Redirect if already logged in\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      {loading && <Spinner />}\r\n      <Form layout=\"vertical\" onFinish={submitHandler}>\r\n        <h1>Register Form</h1>\r\n\r\n        <Form.Item \r\n          label=\"Name\" \r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"Please enter your name!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item \r\n          label=\"Email\" \r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please enter your email!\" }, { type: \"email\", message: \"Enter a valid email!\" }]}\r\n        >\r\n          <Input type=\"email\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item \r\n          label=\"Password\" \r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: \"Please enter your password!\" },\r\n            { min: 6, message: \"Password must be at least 6 characters long!\" }\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Link to=\"/login\">Already registered? Click here to login</Link>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const userData = localStorage.getItem(\"user\");\n    if (userData) {\n      setUser(JSON.parse(userData));\n    }\n    setLoading(false);\n  }, []);\n\n  if (loading) return null; // Prevent blinking during load\n\n  return (\n    <>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoutes user={user}>\n              <HomePage />\n            </ProtectedRoutes>\n          }\n        />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n    </>\n  );\n}\n\nexport function ProtectedRoutes({ user, children }) {\n  if (user) {\n    return children;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport 'antd/dist/reset.css';\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}